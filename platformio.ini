; PlatformIO Project Configuration File for EMS-ESP

[platformio]
default_envs = esp8266
; default_envs = esp32

# override any settings with your own local ones in pio_local.ini
extra_configs = pio_local.ini

[common]
;debug_flags = -DDEBUG_ESP_PORT=Serial -DDEBUG_ESP_CORE -DDEBUG_ESP_SSL -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
debug_flags =
  ; -D EMSESP_DEBUG
  ; -D EMSESP_SAFE_MODE

; default platformio compile flags are: -fno-rtti -std=c++11 -Os -mlongcalls -mtext-section-literals -falign-functions=4 -ffunction-sections -fdata-sections -fno-exceptions -Wall

build_flags =
  -D ONEWIRE_CRC16=0
  -D NO_GLOBAL_ARDUINOOTA
  -D ARDUINOJSON_ENABLE_STD_STRING=1

libs_core =
  ArduinoJson
  ESP Async WebServer
  AsyncMqttClient
  1@^2.3.5 ; https://github.com/PaulStoffregen/OneWire

[env]
extra_scripts = scripts/main_script.py
framework = arduino

monitor_speed = 115200
upload_speed = 921600

check_tool = cppcheck, clangtidy
check_severity = high, medium
check_flags =
    cppcheck: --std=c++11
    clangtidy: --checks=-*,clang-analyzer-*,performance-*

; USB upload
; upload_protocol = esptool
; example ports for OSX
;upload_port = /dev/cu.wchusbserial14403
;upload_port = /dev/cu.usbserial-1440
;upload_port = /dev/cu.SLAB_USBtoUART

; OTA upload
upload_protocol = espota
upload_flags = 
   --port=8266
   --auth=neo
upload_port = ems-esp.local

[env:esp8266]
board = esp12e ; https://github.com/platformio/platform-espressif8266/tree/master/boards
build_type = release
platform = espressif8266 ; https://github.com/platformio/platform-espressif8266/releases
board_build.flash_mode = dout
lib_deps = ${common.libs_core}
board_build.f_cpu = 160000000L ; 160MHz
; eagle.flash.4m1m.ld = 1019 KB sketch, 1000 KB SPIFFS. 4KB EEPROM, 4KB RFCAL, 12KB WIFI stack, 2052 KB OTA & buffer
; eagle.flash.4m2m.ld = 1019 KB sketch, 2024 KB SPIFFS. 4KB EEPROM, 4KB RFCAL, 12KB WIFI stack, 1028 KB OTA & buffer
board_build.ldscript = eagle.flash.4m1m.ld 
build_flags = ${common.build_flags} ${common.debug_flags} -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY
lib_ignore =
    AsyncTCP

[env:esp32]
board = esp32dev
build_type = release
platform = espressif32
board_build.partitions = min_spiffs.csv ; https://github.com/espressif/arduino-esp32/blob/master/tools/partitions/
lib_deps = ${common.libs_core}
build_flags = ${common.build_flags} ${common.debug_flags}
