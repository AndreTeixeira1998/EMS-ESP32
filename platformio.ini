; PlatformIO Project Configuration File
; For EMS-ESP

[platformio]
;default_envs = esp8266
;default_envs = esp32

# override any settings with your own local ones in pio_local.ini
extra_configs = pio_local.ini

[common]
# Available ESP8266 lwIP variants (macros):
#    see https://docs.platformio.org/en/latest/platforms/espressif8266.html
# -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY v2 Lower Memory (default)
# -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH v2 Higher Bandwidth
# -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY_LOW_FLASH v2 Lower Memory (no features)
# -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH_LOW_FLASH v2 Higher Bandwidth (no features)
# -D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_LOW_MEMORY v2 IPv6 Lower Memory
# -D PIO_FRAMEWORK_ARDUINO_LWIP2_IPV6_HIGHER_BANDWIDTH v2 IPv6 Higher Bandwidth
# -D PIO_FRAMEWORK_ARDUINO_LWIP_HIGHER_BANDWIDTH v1.4 Higher Bandwidth

;debug_flags = -DDEBUG_ESP_PORT=Serial -DDEBUG_ESP_CORE -DDEBUG_ESP_SSL -DDEBUG_ESP_WIFI -DDEBUG_ESP_HTTP_CLIENT -DDEBUG_ESP_HTTP_UPDATE -DDEBUG_ESP_HTTP_SERVER -DDEBUG_ESP_UPDATER -DDEBUG_ESP_OTA -DDEBUG_TLS_MEM
debug_flags =
  -D EMSESP_DEBUG
  ; -D EMSESP_SAFE_MODE
  ; -D ENABLE_CORS -D CORS_ORIGIN=\"http://localhost:3000\"

build_flags = -std=c++11 -Os -fno-exceptions
  -D ONEWIRE_CRC16=0
  -D NO_GLOBAL_ARDUINOOTA
  -D ARDUINOJSON_ENABLE_STD_STRING=1
  -D ARDUINOJSON_USE_DOUBLE=0
	-D ARDUINOJSON_USE_LONG_LONG=0
  -D BEARSSL_SSL_BASIC
  -D PROGMEM_WWW

libs_core =
  ArduinoJson
  ESP Async WebServer
  AsyncMqttClient
  1@^2.3.5 ; https://github.com/PaulStoffregen/OneWire

libs_esp8266 = 
libs_esp32 =

[env]
build_unflags = -fno-rtti ; for dynamic_cast<>
;lib_ldf_mode = chain+
extra_scripts = scripts/main_script.py
framework = arduino
monitor_speed = 115200
upload_speed = 921600

; OTA
upload_protocol = esptool
; upload_protocol = espota
; upload_flags = 
;    --port=8266
;    --auth=neo
; upload_port = ems-esp2.local

[env:esp8266]
build_type = release
platform = espressif8266 ; https://github.com/platformio/platform-espressif8266/releases
;platform = espressif8266@2.4.0 ; Arduino core 2.6.3 
board = esp12e
lib_deps = ${common.libs_core} ${common.libs_esp8266}
board_build.f_cpu = 160000000L ; 160MHz
;board_build.ldscript = eagle.flash.4m1m.ld ; 1019 KB sketch, 1000 KB SPIFFS. 4KB EEPROM, 4KB RFCAL, 12KB WIFI stack, 2052 KB OTA & buffer
board_build.ldscript = eagle.flash.4m2m.ld ; same as above but with 2024 KB SPIFFS
build_flags = ${common.build_flags} ${common.debug_flags} -flto -D PIO_FRAMEWORK_ARDUINO_LWIP2_LOW_MEMORY

[env:esp32]
build_type = release
platform = espressif32
board = esp32dev
lib_deps = ${common.libs_core} ${common.libs_esp32}
build_flags = ${common.build_flags} ${common.debug_flags} -D PIO_FRAMEWORK_ARDUINO_LWIP2_HIGHER_BANDWIDTH

